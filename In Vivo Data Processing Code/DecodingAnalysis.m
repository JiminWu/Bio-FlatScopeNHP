%% Code for orientation decoding analysis
clear;
addpath './Tools';
protoDir = '';

%% Ground truth analysis

load('Saved_maps_groundtruth.mat')
Cond90 = TS.Header.Index.iValidBLKCond{6};
Cond0 = TS.Header.Index.iValidBLKCond{3};
map0_gt = DataTrialBand(:,:,Cond0);
map90_gt = DataTrialBand(:,:,Cond90);
[DP_gt,DPBSSE_gt,Weight_gt,vA_gt,vB_gt] = CalculateDiscrimination(map0_gt, map90_gt);

%% Bio-FlatScopeNHP analysis

load('Saved_maps_flatscope.mat')
map0_fs = real(Datatrial_filtered1);
map90_fs = real(Datatrial_filtered2);
[DP_fs,DPBSSE_fs,Weight_fs,vA_fs,vB_fs] = CalculateDiscrimination(map0_fs, map90_fs);

%% Plot results

figure,
% annotation('TextBox',[0,0.9,1,0.1], ...
%            'String', ...
%            'Orientation discrimination (band-pass)', ...
%            'HorizontalAlignment','Center', ...
%            'FontWeight','bold', ...
%            'FontSize',12, ...
%            'LineStyle','None');
% axes('Position',[0.1,0.3,0.3,0.4]);
vEdge_fs = linspace(min(min(vA_fs),min(vB_fs)),max(max(vA_fs),max(vB_fs)),13);
HistA_fs = histcounts(vA_fs,vEdge_fs);
HistB_fs = histcounts(vB_fs,vEdge_fs);
vHist_fs = vEdge_fs(1:end-1)+(vEdge_fs(2)-vEdge_fs(1))/2;
bar(vEdge_fs(1:end-1)+(vEdge_fs(2)-vEdge_fs(1))/4,HistA_fs,0.5, ...
    'EdgeColor','r', ...
    'FaceColor','r');
hold on;
bar(vEdge_fs(1:end-1)-(vEdge_fs(2)-vEdge_fs(1))/4,HistB_fs,0.5, ...
    'EdgeColor','b', ...
    'FaceColor','b');
hold off;
xlabel('Decision variable', ...
       'FontSize',12, ...
       'FontWeight','Bold');
ylabel('Trial counts', ...
       'FontSize',12, ...
       'FontWeight','Bold');
title(sprintf('d''=%0.2f',DP_fs), ...
      'FontSize',12, ...
      'FontWeight','Bold');

figure,
% annotation('TextBox',[0,0.9,1,0.1], ...
%            'String', ...
%            'Orientation discrimination (band-pass)', ...
%            'HorizontalAlignment','Center', ...
%            'FontWeight','bold', ...
%            'FontSize',12, ...
%            'LineStyle','None');
% axes('Position',[0.1,0.3,0.3,0.4]);
vEdge_gt = linspace(min(min(vA_gt),min(vB_gt)),max(max(vA_gt),max(vB_gt)),13);
HistA_gt = histcounts(vA_gt,vEdge_gt);
HistB_gt = histcounts(vB_gt,vEdge_gt);
vHist_gt = vEdge_gt(1:end-1)+(vEdge_gt(2)-vEdge_gt(1))/2;
bar(vEdge_gt(1:end-1)+(vEdge_gt(2)-vEdge_gt(1))/4,HistA_gt,0.5, ...
    'EdgeColor','r', ...
    'FaceColor','r');
hold on;
bar(vEdge_gt(1:end-1)-(vEdge_gt(2)-vEdge_gt(1))/4,HistB_gt,0.5, ...
    'EdgeColor','b', ...
    'FaceColor','b');
hold off;
xlabel('Decision variable', ...
       'FontSize',12, ...
       'FontWeight','Bold');
ylabel('Trial counts', ...
       'FontSize',12, ...
       'FontWeight','Bold');
title(sprintf('d''=%0.2f',DP_gt), ...
      'FontSize',12, ...
      'FontWeight','Bold');